//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace recommenderSystems.RecruiteeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class CategoryDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryDescription {
            get {
                return this.CategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryDescriptionField, value) != true)) {
                    this.CategoryDescriptionField = value;
                    this.RaisePropertyChanged("CategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryIdField, value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RankingDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class RankingDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankingNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RankingId {
            get {
                return this.RankingIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RankingIdField, value) != true)) {
                    this.RankingIdField = value;
                    this.RaisePropertyChanged("RankingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RankingName {
            get {
                return this.RankingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RankingNameField, value) != true)) {
                    this.RankingNameField = value;
                    this.RaisePropertyChanged("RankingName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecruiteeDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class RecruiteeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RankingValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecruiteeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgeId {
            get {
                return this.AgeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeIdField, value) != true)) {
                    this.AgeIdField = value;
                    this.RaisePropertyChanged("AgeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationId {
            get {
                return this.EducationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationIdField, value) != true)) {
                    this.EducationIdField = value;
                    this.RaisePropertyChanged("EducationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomeId {
            get {
                return this.IncomeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomeIdField, value) != true)) {
                    this.IncomeIdField = value;
                    this.RaisePropertyChanged("IncomeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RankingId {
            get {
                return this.RankingIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RankingIdField, value) != true)) {
                    this.RankingIdField = value;
                    this.RaisePropertyChanged("RankingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RankingValue {
            get {
                return this.RankingValueField;
            }
            set {
                if ((this.RankingValueField.Equals(value) != true)) {
                    this.RankingValueField = value;
                    this.RaisePropertyChanged("RankingValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecruiteeId {
            get {
                return this.RecruiteeIdField;
            }
            set {
                if ((this.RecruiteeIdField.Equals(value) != true)) {
                    this.RecruiteeIdField = value;
                    this.RaisePropertyChanged("RecruiteeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkillDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class SkillDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillDescription {
            get {
                return this.SkillDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillDescriptionField, value) != true)) {
                    this.SkillDescriptionField = value;
                    this.RaisePropertyChanged("SkillDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillId {
            get {
                return this.SkillIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillIdField, value) != true)) {
                    this.SkillIdField = value;
                    this.RaisePropertyChanged("SkillId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillName {
            get {
                return this.SkillNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillNameField, value) != true)) {
                    this.SkillNameField = value;
                    this.RaisePropertyChanged("SkillName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgeDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class AgeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgeDescription {
            get {
                return this.AgeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeDescriptionField, value) != true)) {
                    this.AgeDescriptionField = value;
                    this.RaisePropertyChanged("AgeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgeId {
            get {
                return this.AgeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeIdField, value) != true)) {
                    this.AgeIdField = value;
                    this.RaisePropertyChanged("AgeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class EducationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationDescription {
            get {
                return this.EducationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationDescriptionField, value) != true)) {
                    this.EducationDescriptionField = value;
                    this.RaisePropertyChanged("EducationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationId {
            get {
                return this.EducationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationIdField, value) != true)) {
                    this.EducationIdField = value;
                    this.RaisePropertyChanged("EducationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncomeDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class IncomeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomeDescription {
            get {
                return this.IncomeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomeDescriptionField, value) != true)) {
                    this.IncomeDescriptionField = value;
                    this.RaisePropertyChanged("IncomeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomeId {
            get {
                return this.IncomeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomeIdField, value) != true)) {
                    this.IncomeIdField = value;
                    this.RaisePropertyChanged("IncomeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecruiteeSkillDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class RecruiteeSkillDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecruiteeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecruiteeId {
            get {
                return this.RecruiteeIdField;
            }
            set {
                if ((this.RecruiteeIdField.Equals(value) != true)) {
                    this.RecruiteeIdField = value;
                    this.RaisePropertyChanged("RecruiteeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillId {
            get {
                return this.SkillIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillIdField, value) != true)) {
                    this.SkillIdField = value;
                    this.RaisePropertyChanged("SkillId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RecruiteeService.IServiceWCF")]
    public interface IServiceWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllCategory", ReplyAction="http://tempuri.org/IServiceWCF/selectAllCategoryResponse")]
        recommenderSystems.RecruiteeService.CategoryDto[] selectAllCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllCategory", ReplyAction="http://tempuri.org/IServiceWCF/selectAllCategoryResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.CategoryDto[]> selectAllCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectCategoryById", ReplyAction="http://tempuri.org/IServiceWCF/selectCategoryByIdResponse")]
        recommenderSystems.RecruiteeService.CategoryDto selectCategoryById(recommenderSystems.RecruiteeService.CategoryDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectCategoryById", ReplyAction="http://tempuri.org/IServiceWCF/selectCategoryByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.CategoryDto> selectCategoryByIdAsync(recommenderSystems.RecruiteeService.CategoryDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertCategory", ReplyAction="http://tempuri.org/IServiceWCF/insertCategoryResponse")]
        bool insertCategory(recommenderSystems.RecruiteeService.CategoryDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertCategory", ReplyAction="http://tempuri.org/IServiceWCF/insertCategoryResponse")]
        System.Threading.Tasks.Task<bool> insertCategoryAsync(recommenderSystems.RecruiteeService.CategoryDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateCategory", ReplyAction="http://tempuri.org/IServiceWCF/updateCategoryResponse")]
        bool updateCategory(recommenderSystems.RecruiteeService.CategoryDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateCategory", ReplyAction="http://tempuri.org/IServiceWCF/updateCategoryResponse")]
        System.Threading.Tasks.Task<bool> updateCategoryAsync(recommenderSystems.RecruiteeService.CategoryDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteCategory", ReplyAction="http://tempuri.org/IServiceWCF/deleteCategoryResponse")]
        bool deleteCategory(recommenderSystems.RecruiteeService.CategoryDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteCategory", ReplyAction="http://tempuri.org/IServiceWCF/deleteCategoryResponse")]
        System.Threading.Tasks.Task<bool> deleteCategoryAsync(recommenderSystems.RecruiteeService.CategoryDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRanking", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRankingResponse")]
        recommenderSystems.RecruiteeService.RankingDto[] selectAllRanking();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRanking", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRankingResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RankingDto[]> selectAllRankingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRankingById", ReplyAction="http://tempuri.org/IServiceWCF/selectRankingByIdResponse")]
        recommenderSystems.RecruiteeService.RankingDto selectRankingById(recommenderSystems.RecruiteeService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRankingById", ReplyAction="http://tempuri.org/IServiceWCF/selectRankingByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RankingDto> selectRankingByIdAsync(recommenderSystems.RecruiteeService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRanking", ReplyAction="http://tempuri.org/IServiceWCF/insertRankingResponse")]
        bool insertRanking(recommenderSystems.RecruiteeService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRanking", ReplyAction="http://tempuri.org/IServiceWCF/insertRankingResponse")]
        System.Threading.Tasks.Task<bool> insertRankingAsync(recommenderSystems.RecruiteeService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRanking", ReplyAction="http://tempuri.org/IServiceWCF/updateRankingResponse")]
        bool updateRanking(recommenderSystems.RecruiteeService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRanking", ReplyAction="http://tempuri.org/IServiceWCF/updateRankingResponse")]
        System.Threading.Tasks.Task<bool> updateRankingAsync(recommenderSystems.RecruiteeService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRanking", ReplyAction="http://tempuri.org/IServiceWCF/deleteRankingResponse")]
        bool deleteRanking(recommenderSystems.RecruiteeService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRanking", ReplyAction="http://tempuri.org/IServiceWCF/deleteRankingResponse")]
        System.Threading.Tasks.Task<bool> deleteRankingAsync(recommenderSystems.RecruiteeService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createRankingDTO", ReplyAction="http://tempuri.org/IServiceWCF/createRankingDTOResponse")]
        recommenderSystems.RecruiteeService.RankingDto createRankingDTO(string RankingId, string RankingName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createRankingDTO", ReplyAction="http://tempuri.org/IServiceWCF/createRankingDTOResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RankingDto> createRankingDTOAsync(string RankingId, string RankingName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRecruiteeResponse")]
        recommenderSystems.RecruiteeService.RecruiteeDto[] selectAllRecruitee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRecruiteeResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto[]> selectAllRecruiteeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeById", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeByIdResponse")]
        recommenderSystems.RecruiteeService.RecruiteeDto selectRecruiteeById(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeById", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto> selectRecruiteeByIdAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeByEmail", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeByEmailResponse")]
        recommenderSystems.RecruiteeService.RecruiteeDto selectRecruiteeByEmail(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeByEmail", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeByEmailResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto> selectRecruiteeByEmailAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeBySkillId", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeBySkillIdResponse")]
        recommenderSystems.RecruiteeService.RecruiteeDto[] selectRecruiteeBySkillId(string skillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeBySkillId", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeBySkillIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto[]> selectRecruiteeBySkillIdAsync(string skillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/insertRecruiteeResponse")]
        bool insertRecruitee(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/insertRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> insertRecruiteeAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/updateRecruiteeResponse")]
        bool updateRecruitee(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/updateRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> updateRecruiteeAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/deleteRecruiteeResponse")]
        bool deleteRecruitee(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/deleteRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> deleteRecruiteeAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createRecruiteeDTO", ReplyAction="http://tempuri.org/IServiceWCF/createRecruiteeDTOResponse")]
        recommenderSystems.RecruiteeService.RecruiteeDto createRecruiteeDTO(System.Guid RecruiteeId, string RankingId, double RankingValue, string Email, string FirstName, string LastName, string Gender, string AgeId, string EducationId, string IncomeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createRecruiteeDTO", ReplyAction="http://tempuri.org/IServiceWCF/createRecruiteeDTOResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto> createRecruiteeDTOAsync(System.Guid RecruiteeId, string RankingId, double RankingValue, string Email, string FirstName, string LastName, string Gender, string AgeId, string EducationId, string IncomeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/addSkillToRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/addSkillToRecruiteeResponse")]
        bool addSkillToRecruitee(System.Guid RecruiteeId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/addSkillToRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/addSkillToRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> addSkillToRecruiteeAsync(System.Guid RecruiteeId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/removeSkillFromRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/removeSkillFromRecruiteeResponse")]
        bool removeSkillFromRecruitee(System.Guid RecruiteeId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/removeSkillFromRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/removeSkillFromRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> removeSkillFromRecruiteeAsync(System.Guid RecruiteeId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeNames", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeNamesResponse")]
        System.Guid[] selectRecruiteeNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeNames", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeNamesResponse")]
        System.Threading.Tasks.Task<System.Guid[]> selectRecruiteeNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllSkill", ReplyAction="http://tempuri.org/IServiceWCF/selectAllSkillResponse")]
        recommenderSystems.RecruiteeService.SkillDto[] selectAllSkill();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllSkill", ReplyAction="http://tempuri.org/IServiceWCF/selectAllSkillResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.SkillDto[]> selectAllSkillAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectSkillById", ReplyAction="http://tempuri.org/IServiceWCF/selectSkillByIdResponse")]
        recommenderSystems.RecruiteeService.SkillDto selectSkillById(recommenderSystems.RecruiteeService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectSkillById", ReplyAction="http://tempuri.org/IServiceWCF/selectSkillByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.SkillDto> selectSkillByIdAsync(recommenderSystems.RecruiteeService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertSkill", ReplyAction="http://tempuri.org/IServiceWCF/insertSkillResponse")]
        bool insertSkill(recommenderSystems.RecruiteeService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertSkill", ReplyAction="http://tempuri.org/IServiceWCF/insertSkillResponse")]
        System.Threading.Tasks.Task<bool> insertSkillAsync(recommenderSystems.RecruiteeService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateSkill", ReplyAction="http://tempuri.org/IServiceWCF/updateSkillResponse")]
        bool updateSkill(recommenderSystems.RecruiteeService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateSkill", ReplyAction="http://tempuri.org/IServiceWCF/updateSkillResponse")]
        System.Threading.Tasks.Task<bool> updateSkillAsync(recommenderSystems.RecruiteeService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteSkill", ReplyAction="http://tempuri.org/IServiceWCF/deleteSkillResponse")]
        bool deleteSkill(recommenderSystems.RecruiteeService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteSkill", ReplyAction="http://tempuri.org/IServiceWCF/deleteSkillResponse")]
        System.Threading.Tasks.Task<bool> deleteSkillAsync(recommenderSystems.RecruiteeService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllAge", ReplyAction="http://tempuri.org/IServiceWCF/selectAllAgeResponse")]
        recommenderSystems.RecruiteeService.AgeDto[] selectAllAge();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllAge", ReplyAction="http://tempuri.org/IServiceWCF/selectAllAgeResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.AgeDto[]> selectAllAgeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAgeById", ReplyAction="http://tempuri.org/IServiceWCF/selectAgeByIdResponse")]
        recommenderSystems.RecruiteeService.AgeDto selectAgeById(recommenderSystems.RecruiteeService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAgeById", ReplyAction="http://tempuri.org/IServiceWCF/selectAgeByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.AgeDto> selectAgeByIdAsync(recommenderSystems.RecruiteeService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertAge", ReplyAction="http://tempuri.org/IServiceWCF/insertAgeResponse")]
        bool insertAge(recommenderSystems.RecruiteeService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertAge", ReplyAction="http://tempuri.org/IServiceWCF/insertAgeResponse")]
        System.Threading.Tasks.Task<bool> insertAgeAsync(recommenderSystems.RecruiteeService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateAge", ReplyAction="http://tempuri.org/IServiceWCF/updateAgeResponse")]
        bool updateAge(recommenderSystems.RecruiteeService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateAge", ReplyAction="http://tempuri.org/IServiceWCF/updateAgeResponse")]
        System.Threading.Tasks.Task<bool> updateAgeAsync(recommenderSystems.RecruiteeService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteAge", ReplyAction="http://tempuri.org/IServiceWCF/deleteAgeResponse")]
        bool deleteAge(recommenderSystems.RecruiteeService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteAge", ReplyAction="http://tempuri.org/IServiceWCF/deleteAgeResponse")]
        System.Threading.Tasks.Task<bool> deleteAgeAsync(recommenderSystems.RecruiteeService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllEducation", ReplyAction="http://tempuri.org/IServiceWCF/selectAllEducationResponse")]
        recommenderSystems.RecruiteeService.EducationDto[] selectAllEducation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllEducation", ReplyAction="http://tempuri.org/IServiceWCF/selectAllEducationResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.EducationDto[]> selectAllEducationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectEducationById", ReplyAction="http://tempuri.org/IServiceWCF/selectEducationByIdResponse")]
        recommenderSystems.RecruiteeService.EducationDto selectEducationById(recommenderSystems.RecruiteeService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectEducationById", ReplyAction="http://tempuri.org/IServiceWCF/selectEducationByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.EducationDto> selectEducationByIdAsync(recommenderSystems.RecruiteeService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertEducation", ReplyAction="http://tempuri.org/IServiceWCF/insertEducationResponse")]
        bool insertEducation(recommenderSystems.RecruiteeService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertEducation", ReplyAction="http://tempuri.org/IServiceWCF/insertEducationResponse")]
        System.Threading.Tasks.Task<bool> insertEducationAsync(recommenderSystems.RecruiteeService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateEducation", ReplyAction="http://tempuri.org/IServiceWCF/updateEducationResponse")]
        bool updateEducation(recommenderSystems.RecruiteeService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateEducation", ReplyAction="http://tempuri.org/IServiceWCF/updateEducationResponse")]
        System.Threading.Tasks.Task<bool> updateEducationAsync(recommenderSystems.RecruiteeService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteEducation", ReplyAction="http://tempuri.org/IServiceWCF/deleteEducationResponse")]
        bool deleteEducation(recommenderSystems.RecruiteeService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteEducation", ReplyAction="http://tempuri.org/IServiceWCF/deleteEducationResponse")]
        System.Threading.Tasks.Task<bool> deleteEducationAsync(recommenderSystems.RecruiteeService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllIncome", ReplyAction="http://tempuri.org/IServiceWCF/selectAllIncomeResponse")]
        recommenderSystems.RecruiteeService.IncomeDto[] selectAllIncome();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllIncome", ReplyAction="http://tempuri.org/IServiceWCF/selectAllIncomeResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.IncomeDto[]> selectAllIncomeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectIncomeById", ReplyAction="http://tempuri.org/IServiceWCF/selectIncomeByIdResponse")]
        recommenderSystems.RecruiteeService.IncomeDto selectIncomeById(recommenderSystems.RecruiteeService.IncomeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectIncomeById", ReplyAction="http://tempuri.org/IServiceWCF/selectIncomeByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.IncomeDto> selectIncomeByIdAsync(recommenderSystems.RecruiteeService.IncomeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertIncome", ReplyAction="http://tempuri.org/IServiceWCF/insertIncomeResponse")]
        bool insertIncome(recommenderSystems.RecruiteeService.IncomeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertIncome", ReplyAction="http://tempuri.org/IServiceWCF/insertIncomeResponse")]
        System.Threading.Tasks.Task<bool> insertIncomeAsync(recommenderSystems.RecruiteeService.IncomeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateIncome", ReplyAction="http://tempuri.org/IServiceWCF/updateIncomeResponse")]
        bool updateIncome(recommenderSystems.RecruiteeService.IncomeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateIncome", ReplyAction="http://tempuri.org/IServiceWCF/updateIncomeResponse")]
        System.Threading.Tasks.Task<bool> updateIncomeAsync(recommenderSystems.RecruiteeService.IncomeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteIncome", ReplyAction="http://tempuri.org/IServiceWCF/deleteIncomeResponse")]
        bool deleteIncome(recommenderSystems.RecruiteeService.IncomeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteIncome", ReplyAction="http://tempuri.org/IServiceWCF/deleteIncomeResponse")]
        System.Threading.Tasks.Task<bool> deleteIncomeAsync(recommenderSystems.RecruiteeService.IncomeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRecruiteeSkill", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRecruiteeSkillResponse")]
        recommenderSystems.RecruiteeService.RecruiteeSkillDto[] selectAllRecruiteeSkill();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRecruiteeSkill", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRecruiteeSkillResponse")]
        System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeSkillDto[]> selectAllRecruiteeSkillAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceWCFChannel : recommenderSystems.RecruiteeService.IServiceWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceWCFClient : System.ServiceModel.ClientBase<recommenderSystems.RecruiteeService.IServiceWCF>, recommenderSystems.RecruiteeService.IServiceWCF {
        
        public ServiceWCFClient() {
        }
        
        public ServiceWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public recommenderSystems.RecruiteeService.CategoryDto[] selectAllCategory() {
            return base.Channel.selectAllCategory();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.CategoryDto[]> selectAllCategoryAsync() {
            return base.Channel.selectAllCategoryAsync();
        }
        
        public recommenderSystems.RecruiteeService.CategoryDto selectCategoryById(recommenderSystems.RecruiteeService.CategoryDto obj) {
            return base.Channel.selectCategoryById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.CategoryDto> selectCategoryByIdAsync(recommenderSystems.RecruiteeService.CategoryDto obj) {
            return base.Channel.selectCategoryByIdAsync(obj);
        }
        
        public bool insertCategory(recommenderSystems.RecruiteeService.CategoryDto obj) {
            return base.Channel.insertCategory(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertCategoryAsync(recommenderSystems.RecruiteeService.CategoryDto obj) {
            return base.Channel.insertCategoryAsync(obj);
        }
        
        public bool updateCategory(recommenderSystems.RecruiteeService.CategoryDto obj) {
            return base.Channel.updateCategory(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateCategoryAsync(recommenderSystems.RecruiteeService.CategoryDto obj) {
            return base.Channel.updateCategoryAsync(obj);
        }
        
        public bool deleteCategory(recommenderSystems.RecruiteeService.CategoryDto obj) {
            return base.Channel.deleteCategory(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteCategoryAsync(recommenderSystems.RecruiteeService.CategoryDto obj) {
            return base.Channel.deleteCategoryAsync(obj);
        }
        
        public recommenderSystems.RecruiteeService.RankingDto[] selectAllRanking() {
            return base.Channel.selectAllRanking();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RankingDto[]> selectAllRankingAsync() {
            return base.Channel.selectAllRankingAsync();
        }
        
        public recommenderSystems.RecruiteeService.RankingDto selectRankingById(recommenderSystems.RecruiteeService.RankingDto obj) {
            return base.Channel.selectRankingById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RankingDto> selectRankingByIdAsync(recommenderSystems.RecruiteeService.RankingDto obj) {
            return base.Channel.selectRankingByIdAsync(obj);
        }
        
        public bool insertRanking(recommenderSystems.RecruiteeService.RankingDto obj) {
            return base.Channel.insertRanking(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertRankingAsync(recommenderSystems.RecruiteeService.RankingDto obj) {
            return base.Channel.insertRankingAsync(obj);
        }
        
        public bool updateRanking(recommenderSystems.RecruiteeService.RankingDto obj) {
            return base.Channel.updateRanking(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateRankingAsync(recommenderSystems.RecruiteeService.RankingDto obj) {
            return base.Channel.updateRankingAsync(obj);
        }
        
        public bool deleteRanking(recommenderSystems.RecruiteeService.RankingDto obj) {
            return base.Channel.deleteRanking(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteRankingAsync(recommenderSystems.RecruiteeService.RankingDto obj) {
            return base.Channel.deleteRankingAsync(obj);
        }
        
        public recommenderSystems.RecruiteeService.RankingDto createRankingDTO(string RankingId, string RankingName) {
            return base.Channel.createRankingDTO(RankingId, RankingName);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RankingDto> createRankingDTOAsync(string RankingId, string RankingName) {
            return base.Channel.createRankingDTOAsync(RankingId, RankingName);
        }
        
        public recommenderSystems.RecruiteeService.RecruiteeDto[] selectAllRecruitee() {
            return base.Channel.selectAllRecruitee();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto[]> selectAllRecruiteeAsync() {
            return base.Channel.selectAllRecruiteeAsync();
        }
        
        public recommenderSystems.RecruiteeService.RecruiteeDto selectRecruiteeById(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.selectRecruiteeById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto> selectRecruiteeByIdAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.selectRecruiteeByIdAsync(obj);
        }
        
        public recommenderSystems.RecruiteeService.RecruiteeDto selectRecruiteeByEmail(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.selectRecruiteeByEmail(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto> selectRecruiteeByEmailAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.selectRecruiteeByEmailAsync(obj);
        }
        
        public recommenderSystems.RecruiteeService.RecruiteeDto[] selectRecruiteeBySkillId(string skillId) {
            return base.Channel.selectRecruiteeBySkillId(skillId);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto[]> selectRecruiteeBySkillIdAsync(string skillId) {
            return base.Channel.selectRecruiteeBySkillIdAsync(skillId);
        }
        
        public bool insertRecruitee(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.insertRecruitee(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertRecruiteeAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.insertRecruiteeAsync(obj);
        }
        
        public bool updateRecruitee(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.updateRecruitee(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateRecruiteeAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.updateRecruiteeAsync(obj);
        }
        
        public bool deleteRecruitee(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.deleteRecruitee(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteRecruiteeAsync(recommenderSystems.RecruiteeService.RecruiteeDto obj) {
            return base.Channel.deleteRecruiteeAsync(obj);
        }
        
        public recommenderSystems.RecruiteeService.RecruiteeDto createRecruiteeDTO(System.Guid RecruiteeId, string RankingId, double RankingValue, string Email, string FirstName, string LastName, string Gender, string AgeId, string EducationId, string IncomeId) {
            return base.Channel.createRecruiteeDTO(RecruiteeId, RankingId, RankingValue, Email, FirstName, LastName, Gender, AgeId, EducationId, IncomeId);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeDto> createRecruiteeDTOAsync(System.Guid RecruiteeId, string RankingId, double RankingValue, string Email, string FirstName, string LastName, string Gender, string AgeId, string EducationId, string IncomeId) {
            return base.Channel.createRecruiteeDTOAsync(RecruiteeId, RankingId, RankingValue, Email, FirstName, LastName, Gender, AgeId, EducationId, IncomeId);
        }
        
        public bool addSkillToRecruitee(System.Guid RecruiteeId, string SkillId) {
            return base.Channel.addSkillToRecruitee(RecruiteeId, SkillId);
        }
        
        public System.Threading.Tasks.Task<bool> addSkillToRecruiteeAsync(System.Guid RecruiteeId, string SkillId) {
            return base.Channel.addSkillToRecruiteeAsync(RecruiteeId, SkillId);
        }
        
        public bool removeSkillFromRecruitee(System.Guid RecruiteeId, string SkillId) {
            return base.Channel.removeSkillFromRecruitee(RecruiteeId, SkillId);
        }
        
        public System.Threading.Tasks.Task<bool> removeSkillFromRecruiteeAsync(System.Guid RecruiteeId, string SkillId) {
            return base.Channel.removeSkillFromRecruiteeAsync(RecruiteeId, SkillId);
        }
        
        public System.Guid[] selectRecruiteeNames() {
            return base.Channel.selectRecruiteeNames();
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> selectRecruiteeNamesAsync() {
            return base.Channel.selectRecruiteeNamesAsync();
        }
        
        public recommenderSystems.RecruiteeService.SkillDto[] selectAllSkill() {
            return base.Channel.selectAllSkill();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.SkillDto[]> selectAllSkillAsync() {
            return base.Channel.selectAllSkillAsync();
        }
        
        public recommenderSystems.RecruiteeService.SkillDto selectSkillById(recommenderSystems.RecruiteeService.SkillDto obj) {
            return base.Channel.selectSkillById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.SkillDto> selectSkillByIdAsync(recommenderSystems.RecruiteeService.SkillDto obj) {
            return base.Channel.selectSkillByIdAsync(obj);
        }
        
        public bool insertSkill(recommenderSystems.RecruiteeService.SkillDto obj) {
            return base.Channel.insertSkill(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertSkillAsync(recommenderSystems.RecruiteeService.SkillDto obj) {
            return base.Channel.insertSkillAsync(obj);
        }
        
        public bool updateSkill(recommenderSystems.RecruiteeService.SkillDto obj) {
            return base.Channel.updateSkill(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateSkillAsync(recommenderSystems.RecruiteeService.SkillDto obj) {
            return base.Channel.updateSkillAsync(obj);
        }
        
        public bool deleteSkill(recommenderSystems.RecruiteeService.SkillDto obj) {
            return base.Channel.deleteSkill(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteSkillAsync(recommenderSystems.RecruiteeService.SkillDto obj) {
            return base.Channel.deleteSkillAsync(obj);
        }
        
        public recommenderSystems.RecruiteeService.AgeDto[] selectAllAge() {
            return base.Channel.selectAllAge();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.AgeDto[]> selectAllAgeAsync() {
            return base.Channel.selectAllAgeAsync();
        }
        
        public recommenderSystems.RecruiteeService.AgeDto selectAgeById(recommenderSystems.RecruiteeService.AgeDto obj) {
            return base.Channel.selectAgeById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.AgeDto> selectAgeByIdAsync(recommenderSystems.RecruiteeService.AgeDto obj) {
            return base.Channel.selectAgeByIdAsync(obj);
        }
        
        public bool insertAge(recommenderSystems.RecruiteeService.AgeDto obj) {
            return base.Channel.insertAge(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertAgeAsync(recommenderSystems.RecruiteeService.AgeDto obj) {
            return base.Channel.insertAgeAsync(obj);
        }
        
        public bool updateAge(recommenderSystems.RecruiteeService.AgeDto obj) {
            return base.Channel.updateAge(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateAgeAsync(recommenderSystems.RecruiteeService.AgeDto obj) {
            return base.Channel.updateAgeAsync(obj);
        }
        
        public bool deleteAge(recommenderSystems.RecruiteeService.AgeDto obj) {
            return base.Channel.deleteAge(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAgeAsync(recommenderSystems.RecruiteeService.AgeDto obj) {
            return base.Channel.deleteAgeAsync(obj);
        }
        
        public recommenderSystems.RecruiteeService.EducationDto[] selectAllEducation() {
            return base.Channel.selectAllEducation();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.EducationDto[]> selectAllEducationAsync() {
            return base.Channel.selectAllEducationAsync();
        }
        
        public recommenderSystems.RecruiteeService.EducationDto selectEducationById(recommenderSystems.RecruiteeService.EducationDto obj) {
            return base.Channel.selectEducationById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.EducationDto> selectEducationByIdAsync(recommenderSystems.RecruiteeService.EducationDto obj) {
            return base.Channel.selectEducationByIdAsync(obj);
        }
        
        public bool insertEducation(recommenderSystems.RecruiteeService.EducationDto obj) {
            return base.Channel.insertEducation(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertEducationAsync(recommenderSystems.RecruiteeService.EducationDto obj) {
            return base.Channel.insertEducationAsync(obj);
        }
        
        public bool updateEducation(recommenderSystems.RecruiteeService.EducationDto obj) {
            return base.Channel.updateEducation(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateEducationAsync(recommenderSystems.RecruiteeService.EducationDto obj) {
            return base.Channel.updateEducationAsync(obj);
        }
        
        public bool deleteEducation(recommenderSystems.RecruiteeService.EducationDto obj) {
            return base.Channel.deleteEducation(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteEducationAsync(recommenderSystems.RecruiteeService.EducationDto obj) {
            return base.Channel.deleteEducationAsync(obj);
        }
        
        public recommenderSystems.RecruiteeService.IncomeDto[] selectAllIncome() {
            return base.Channel.selectAllIncome();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.IncomeDto[]> selectAllIncomeAsync() {
            return base.Channel.selectAllIncomeAsync();
        }
        
        public recommenderSystems.RecruiteeService.IncomeDto selectIncomeById(recommenderSystems.RecruiteeService.IncomeDto obj) {
            return base.Channel.selectIncomeById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.IncomeDto> selectIncomeByIdAsync(recommenderSystems.RecruiteeService.IncomeDto obj) {
            return base.Channel.selectIncomeByIdAsync(obj);
        }
        
        public bool insertIncome(recommenderSystems.RecruiteeService.IncomeDto obj) {
            return base.Channel.insertIncome(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertIncomeAsync(recommenderSystems.RecruiteeService.IncomeDto obj) {
            return base.Channel.insertIncomeAsync(obj);
        }
        
        public bool updateIncome(recommenderSystems.RecruiteeService.IncomeDto obj) {
            return base.Channel.updateIncome(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateIncomeAsync(recommenderSystems.RecruiteeService.IncomeDto obj) {
            return base.Channel.updateIncomeAsync(obj);
        }
        
        public bool deleteIncome(recommenderSystems.RecruiteeService.IncomeDto obj) {
            return base.Channel.deleteIncome(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteIncomeAsync(recommenderSystems.RecruiteeService.IncomeDto obj) {
            return base.Channel.deleteIncomeAsync(obj);
        }
        
        public recommenderSystems.RecruiteeService.RecruiteeSkillDto[] selectAllRecruiteeSkill() {
            return base.Channel.selectAllRecruiteeSkill();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.RecruiteeService.RecruiteeSkillDto[]> selectAllRecruiteeSkillAsync() {
            return base.Channel.selectAllRecruiteeSkillAsync();
        }
    }
}
