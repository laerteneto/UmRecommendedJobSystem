//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace recommenderSystems.ElasticService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewElasticWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class TaskDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecruiteeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TaskIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecruiteeId {
            get {
                return this.RecruiteeIdField;
            }
            set {
                if ((this.RecruiteeIdField.Equals(value) != true)) {
                    this.RecruiteeIdField = value;
                    this.RaisePropertyChanged("RecruiteeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskDescription {
            get {
                return this.TaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskDescriptionField, value) != true)) {
                    this.TaskDescriptionField = value;
                    this.RaisePropertyChanged("TaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskRatingDTO", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class TaskRatingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecruiteeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecruiteeId {
            get {
                return this.RecruiteeIdField;
            }
            set {
                if ((this.RecruiteeIdField.Equals(value) != true)) {
                    this.RecruiteeIdField = value;
                    this.RaisePropertyChanged("RecruiteeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecommendedJobDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewElasticWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class RecommendedJobDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PredictedRankingValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecruiteeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PredictedRankingValue {
            get {
                return this.PredictedRankingValueField;
            }
            set {
                if ((this.PredictedRankingValueField.Equals(value) != true)) {
                    this.PredictedRankingValueField = value;
                    this.RaisePropertyChanged("PredictedRankingValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecruiteeId {
            get {
                return this.RecruiteeIdField;
            }
            set {
                if ((this.RecruiteeIdField.Equals(value) != true)) {
                    this.RecruiteeIdField = value;
                    this.RaisePropertyChanged("RecruiteeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecruiteeDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class RecruiteeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RankingValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecruiteeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgeId {
            get {
                return this.AgeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeIdField, value) != true)) {
                    this.AgeIdField = value;
                    this.RaisePropertyChanged("AgeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationId {
            get {
                return this.EducationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationIdField, value) != true)) {
                    this.EducationIdField = value;
                    this.RaisePropertyChanged("EducationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomeId {
            get {
                return this.IncomeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomeIdField, value) != true)) {
                    this.IncomeIdField = value;
                    this.RaisePropertyChanged("IncomeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RankingId {
            get {
                return this.RankingIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RankingIdField, value) != true)) {
                    this.RankingIdField = value;
                    this.RaisePropertyChanged("RankingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RankingValue {
            get {
                return this.RankingValueField;
            }
            set {
                if ((this.RankingValueField.Equals(value) != true)) {
                    this.RankingValueField = value;
                    this.RaisePropertyChanged("RankingValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecruiteeId {
            get {
                return this.RecruiteeIdField;
            }
            set {
                if ((this.RecruiteeIdField.Equals(value) != true)) {
                    this.RecruiteeIdField = value;
                    this.RaisePropertyChanged("RecruiteeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewJobWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class JobDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompensationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EmployerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double JobCompensationValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double JobExperienceLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobQuotaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompensationId {
            get {
                return this.CompensationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompensationIdField, value) != true)) {
                    this.CompensationIdField = value;
                    this.RaisePropertyChanged("CompensationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EmployerId {
            get {
                return this.EmployerIdField;
            }
            set {
                if ((this.EmployerIdField.Equals(value) != true)) {
                    this.EmployerIdField = value;
                    this.RaisePropertyChanged("EmployerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double JobCompensationValue {
            get {
                return this.JobCompensationValueField;
            }
            set {
                if ((this.JobCompensationValueField.Equals(value) != true)) {
                    this.JobCompensationValueField = value;
                    this.RaisePropertyChanged("JobCompensationValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double JobExperienceLevel {
            get {
                return this.JobExperienceLevelField;
            }
            set {
                if ((this.JobExperienceLevelField.Equals(value) != true)) {
                    this.JobExperienceLevelField = value;
                    this.RaisePropertyChanged("JobExperienceLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobName {
            get {
                return this.JobNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNameField, value) != true)) {
                    this.JobNameField = value;
                    this.RaisePropertyChanged("JobName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobQuota {
            get {
                return this.JobQuotaField;
            }
            set {
                if ((this.JobQuotaField.Equals(value) != true)) {
                    this.JobQuotaField = value;
                    this.RaisePropertyChanged("JobQuota");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkillDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewJobWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class SkillDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillDescription {
            get {
                return this.SkillDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillDescriptionField, value) != true)) {
                    this.SkillDescriptionField = value;
                    this.RaisePropertyChanged("SkillDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillId {
            get {
                return this.SkillIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillIdField, value) != true)) {
                    this.SkillIdField = value;
                    this.RaisePropertyChanged("SkillId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillName {
            get {
                return this.SkillNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillNameField, value) != true)) {
                    this.SkillNameField = value;
                    this.RaisePropertyChanged("SkillName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkillDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class SkillDto1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkillNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillDescription {
            get {
                return this.SkillDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillDescriptionField, value) != true)) {
                    this.SkillDescriptionField = value;
                    this.RaisePropertyChanged("SkillDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillId {
            get {
                return this.SkillIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillIdField, value) != true)) {
                    this.SkillIdField = value;
                    this.RaisePropertyChanged("SkillId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkillName {
            get {
                return this.SkillNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillNameField, value) != true)) {
                    this.SkillNameField = value;
                    this.RaisePropertyChanged("SkillName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RankingDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class RankingDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankingNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RankingId {
            get {
                return this.RankingIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RankingIdField, value) != true)) {
                    this.RankingIdField = value;
                    this.RaisePropertyChanged("RankingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RankingName {
            get {
                return this.RankingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RankingNameField, value) != true)) {
                    this.RankingNameField = value;
                    this.RaisePropertyChanged("RankingName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgeDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class AgeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgeDescription {
            get {
                return this.AgeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeDescriptionField, value) != true)) {
                    this.AgeDescriptionField = value;
                    this.RaisePropertyChanged("AgeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgeId {
            get {
                return this.AgeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeIdField, value) != true)) {
                    this.AgeIdField = value;
                    this.RaisePropertyChanged("AgeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class EducationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationDescription {
            get {
                return this.EducationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationDescriptionField, value) != true)) {
                    this.EducationDescriptionField = value;
                    this.RaisePropertyChanged("EducationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationId {
            get {
                return this.EducationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationIdField, value) != true)) {
                    this.EducationIdField = value;
                    this.RaisePropertyChanged("EducationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncomeDto", Namespace="http://schemas.datacontract.org/2004/07/UMNewRecruiteeWebsite.DomainDTO")]
    [System.SerializableAttribute()]
    public partial class IncomeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomeDescription {
            get {
                return this.IncomeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomeDescriptionField, value) != true)) {
                    this.IncomeDescriptionField = value;
                    this.RaisePropertyChanged("IncomeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomeId {
            get {
                return this.IncomeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomeIdField, value) != true)) {
                    this.IncomeIdField = value;
                    this.RaisePropertyChanged("IncomeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ElasticService.IServiceWCF")]
    public interface IServiceWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllTask", ReplyAction="http://tempuri.org/IServiceWCF/selectAllTaskResponse")]
        recommenderSystems.ElasticService.TaskDto[] selectAllTask();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllTask", ReplyAction="http://tempuri.org/IServiceWCF/selectAllTaskResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.TaskDto[]> selectAllTaskAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectTaskById", ReplyAction="http://tempuri.org/IServiceWCF/selectTaskByIdResponse")]
        recommenderSystems.ElasticService.TaskDto selectTaskById(recommenderSystems.ElasticService.TaskDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectTaskById", ReplyAction="http://tempuri.org/IServiceWCF/selectTaskByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.TaskDto> selectTaskByIdAsync(recommenderSystems.ElasticService.TaskDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertTask", ReplyAction="http://tempuri.org/IServiceWCF/insertTaskResponse")]
        bool insertTask(recommenderSystems.ElasticService.TaskDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertTask", ReplyAction="http://tempuri.org/IServiceWCF/insertTaskResponse")]
        System.Threading.Tasks.Task<bool> insertTaskAsync(recommenderSystems.ElasticService.TaskDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateTask", ReplyAction="http://tempuri.org/IServiceWCF/updateTaskResponse")]
        bool updateTask(recommenderSystems.ElasticService.TaskDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateTask", ReplyAction="http://tempuri.org/IServiceWCF/updateTaskResponse")]
        System.Threading.Tasks.Task<bool> updateTaskAsync(recommenderSystems.ElasticService.TaskDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteTask", ReplyAction="http://tempuri.org/IServiceWCF/deleteTaskResponse")]
        bool deleteTask(recommenderSystems.ElasticService.TaskDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteTask", ReplyAction="http://tempuri.org/IServiceWCF/deleteTaskResponse")]
        System.Threading.Tasks.Task<bool> deleteTaskAsync(recommenderSystems.ElasticService.TaskDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRatings", ReplyAction="http://tempuri.org/IServiceWCF/selectRatingsResponse")]
        recommenderSystems.ElasticService.TaskRatingDTO[] selectRatings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRatings", ReplyAction="http://tempuri.org/IServiceWCF/selectRatingsResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.TaskRatingDTO[]> selectRatingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRecommendedJob", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRecommendedJobResponse")]
        recommenderSystems.ElasticService.RecommendedJobDto[] selectAllRecommendedJob();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRecommendedJob", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRecommendedJobResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecommendedJobDto[]> selectAllRecommendedJobAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecommendedJobByJobIdAndRecruiteeId", ReplyAction="http://tempuri.org/IServiceWCF/selectRecommendedJobByJobIdAndRecruiteeIdResponse")]
        recommenderSystems.ElasticService.RecommendedJobDto selectRecommendedJobByJobIdAndRecruiteeId(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecommendedJobByJobIdAndRecruiteeId", ReplyAction="http://tempuri.org/IServiceWCF/selectRecommendedJobByJobIdAndRecruiteeIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecommendedJobDto> selectRecommendedJobByJobIdAndRecruiteeIdAsync(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecommendedJobByRecruiteeId", ReplyAction="http://tempuri.org/IServiceWCF/selectRecommendedJobByRecruiteeIdResponse")]
        recommenderSystems.ElasticService.RecommendedJobDto[] selectRecommendedJobByRecruiteeId(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecommendedJobByRecruiteeId", ReplyAction="http://tempuri.org/IServiceWCF/selectRecommendedJobByRecruiteeIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecommendedJobDto[]> selectRecommendedJobByRecruiteeIdAsync(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRecommendedJob", ReplyAction="http://tempuri.org/IServiceWCF/insertRecommendedJobResponse")]
        bool insertRecommendedJob(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRecommendedJob", ReplyAction="http://tempuri.org/IServiceWCF/insertRecommendedJobResponse")]
        System.Threading.Tasks.Task<bool> insertRecommendedJobAsync(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRecommendedJob", ReplyAction="http://tempuri.org/IServiceWCF/updateRecommendedJobResponse")]
        bool updateRecommendedJob(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRecommendedJob", ReplyAction="http://tempuri.org/IServiceWCF/updateRecommendedJobResponse")]
        System.Threading.Tasks.Task<bool> updateRecommendedJobAsync(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRecommendedJob", ReplyAction="http://tempuri.org/IServiceWCF/deleteRecommendedJobResponse")]
        bool deleteRecommendedJob(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRecommendedJob", ReplyAction="http://tempuri.org/IServiceWCF/deleteRecommendedJobResponse")]
        System.Threading.Tasks.Task<bool> deleteRecommendedJobAsync(recommenderSystems.ElasticService.RecommendedJobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRecruiteeResponse")]
        recommenderSystems.ElasticService.RecruiteeDto[] selectAllRecruitee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRecruiteeResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto[]> selectAllRecruiteeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeById", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeByIdResponse")]
        recommenderSystems.ElasticService.RecruiteeDto selectRecruiteeById(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeById", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto> selectRecruiteeByIdAsync(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeByEmail", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeByEmailResponse")]
        recommenderSystems.ElasticService.RecruiteeDto selectRecruiteeByEmail(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeByEmail", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeByEmailResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto> selectRecruiteeByEmailAsync(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/insertRecruiteeResponse")]
        bool insertRecruitee(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/insertRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> insertRecruiteeAsync(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/updateRecruiteeResponse")]
        bool updateRecruitee(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/updateRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> updateRecruiteeAsync(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/deleteRecruiteeResponse")]
        bool deleteRecruitee(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/deleteRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> deleteRecruiteeAsync(recommenderSystems.ElasticService.RecruiteeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createRecruiteeDTO", ReplyAction="http://tempuri.org/IServiceWCF/createRecruiteeDTOResponse")]
        recommenderSystems.ElasticService.RecruiteeDto createRecruiteeDTO(System.Guid RecruiteeId, string RankingId, double RankingValue, string Email, string FirstName, string LastName, string Gender, string AgeId, string EducationId, string IncomeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createRecruiteeDTO", ReplyAction="http://tempuri.org/IServiceWCF/createRecruiteeDTOResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto> createRecruiteeDTOAsync(System.Guid RecruiteeId, string RankingId, double RankingValue, string Email, string FirstName, string LastName, string Gender, string AgeId, string EducationId, string IncomeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeBySkillId", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeBySkillIdResponse")]
        recommenderSystems.ElasticService.RecruiteeDto[] selectRecruiteeBySkillId(string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRecruiteeBySkillId", ReplyAction="http://tempuri.org/IServiceWCF/selectRecruiteeBySkillIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto[]> selectRecruiteeBySkillIdAsync(string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/addSkillToRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/addSkillToRecruiteeResponse")]
        bool addSkillToRecruitee(string RecruiteeId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/addSkillToRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/addSkillToRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> addSkillToRecruiteeAsync(string RecruiteeId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/removeSkillFromRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/removeSkillFromRecruiteeResponse")]
        bool removeSkillFromRecruitee(string RecruiteeId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/removeSkillFromRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/removeSkillFromRecruiteeResponse")]
        System.Threading.Tasks.Task<bool> removeSkillFromRecruiteeAsync(string RecruiteeId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllJob", ReplyAction="http://tempuri.org/IServiceWCF/selectAllJobResponse")]
        recommenderSystems.ElasticService.JobDto[] selectAllJob();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllJob", ReplyAction="http://tempuri.org/IServiceWCF/selectAllJobResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto[]> selectAllJobAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectJobNotDoneByRecruiteeIdRecommendation", ReplyAction="http://tempuri.org/IServiceWCF/selectJobNotDoneByRecruiteeIdRecommendationRespons" +
            "e")]
        recommenderSystems.ElasticService.JobDto[] selectJobNotDoneByRecruiteeIdRecommendation(string recruiteeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectJobNotDoneByRecruiteeIdRecommendation", ReplyAction="http://tempuri.org/IServiceWCF/selectJobNotDoneByRecruiteeIdRecommendationRespons" +
            "e")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto[]> selectJobNotDoneByRecruiteeIdRecommendationAsync(string recruiteeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectJobNotDoneByRecruiteeId", ReplyAction="http://tempuri.org/IServiceWCF/selectJobNotDoneByRecruiteeIdResponse")]
        recommenderSystems.ElasticService.JobDto[] selectJobNotDoneByRecruiteeId(string recruiteeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectJobNotDoneByRecruiteeId", ReplyAction="http://tempuri.org/IServiceWCF/selectJobNotDoneByRecruiteeIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto[]> selectJobNotDoneByRecruiteeIdAsync(string recruiteeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectJobById", ReplyAction="http://tempuri.org/IServiceWCF/selectJobByIdResponse")]
        recommenderSystems.ElasticService.JobDto selectJobById(recommenderSystems.ElasticService.JobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectJobById", ReplyAction="http://tempuri.org/IServiceWCF/selectJobByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto> selectJobByIdAsync(recommenderSystems.ElasticService.JobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertJob", ReplyAction="http://tempuri.org/IServiceWCF/insertJobResponse")]
        bool insertJob(recommenderSystems.ElasticService.JobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertJob", ReplyAction="http://tempuri.org/IServiceWCF/insertJobResponse")]
        System.Threading.Tasks.Task<bool> insertJobAsync(recommenderSystems.ElasticService.JobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateJob", ReplyAction="http://tempuri.org/IServiceWCF/updateJobResponse")]
        bool updateJob(recommenderSystems.ElasticService.JobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateJob", ReplyAction="http://tempuri.org/IServiceWCF/updateJobResponse")]
        System.Threading.Tasks.Task<bool> updateJobAsync(recommenderSystems.ElasticService.JobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteJob", ReplyAction="http://tempuri.org/IServiceWCF/deleteJobResponse")]
        bool deleteJob(recommenderSystems.ElasticService.JobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteJob", ReplyAction="http://tempuri.org/IServiceWCF/deleteJobResponse")]
        System.Threading.Tasks.Task<bool> deleteJobAsync(recommenderSystems.ElasticService.JobDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createJobDTO", ReplyAction="http://tempuri.org/IServiceWCF/createJobDTOResponse")]
        recommenderSystems.ElasticService.JobDto createJobDTO(System.Guid JobId, string JobName, string CompensationId, System.Guid EmployerId, string JobDescription, int JobQuota, double JobExperienceLevel, double JobCompensationValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createJobDTO", ReplyAction="http://tempuri.org/IServiceWCF/createJobDTOResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto> createJobDTOAsync(System.Guid JobId, string JobName, string CompensationId, System.Guid EmployerId, string JobDescription, int JobQuota, double JobExperienceLevel, double JobCompensationValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectJobBySkillId", ReplyAction="http://tempuri.org/IServiceWCF/selectJobBySkillIdResponse")]
        recommenderSystems.ElasticService.JobDto[] selectJobBySkillId(string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectJobBySkillId", ReplyAction="http://tempuri.org/IServiceWCF/selectJobBySkillIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto[]> selectJobBySkillIdAsync(string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/addSkillToJob", ReplyAction="http://tempuri.org/IServiceWCF/addSkillToJobResponse")]
        bool addSkillToJob(string JobId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/addSkillToJob", ReplyAction="http://tempuri.org/IServiceWCF/addSkillToJobResponse")]
        System.Threading.Tasks.Task<bool> addSkillToJobAsync(string JobId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/removeSkillFromJob", ReplyAction="http://tempuri.org/IServiceWCF/removeSkillFromJobResponse")]
        bool removeSkillFromJob(string JobId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/removeSkillFromJob", ReplyAction="http://tempuri.org/IServiceWCF/removeSkillFromJobResponse")]
        System.Threading.Tasks.Task<bool> removeSkillFromJobAsync(string JobId, string SkillId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllSkillJob", ReplyAction="http://tempuri.org/IServiceWCF/selectAllSkillJobResponse")]
        recommenderSystems.ElasticService.SkillDto[] selectAllSkillJob();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllSkillJob", ReplyAction="http://tempuri.org/IServiceWCF/selectAllSkillJobResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.SkillDto[]> selectAllSkillJobAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectSkillJobById", ReplyAction="http://tempuri.org/IServiceWCF/selectSkillJobByIdResponse")]
        recommenderSystems.ElasticService.SkillDto selectSkillJobById(recommenderSystems.ElasticService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectSkillJobById", ReplyAction="http://tempuri.org/IServiceWCF/selectSkillJobByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.SkillDto> selectSkillJobByIdAsync(recommenderSystems.ElasticService.SkillDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllSkillRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/selectAllSkillRecruiteeResponse")]
        recommenderSystems.ElasticService.SkillDto1[] selectAllSkillRecruitee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllSkillRecruitee", ReplyAction="http://tempuri.org/IServiceWCF/selectAllSkillRecruiteeResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.SkillDto1[]> selectAllSkillRecruiteeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectSkillRecruiteeById", ReplyAction="http://tempuri.org/IServiceWCF/selectSkillRecruiteeByIdResponse")]
        recommenderSystems.ElasticService.SkillDto1 selectSkillRecruiteeById(recommenderSystems.ElasticService.SkillDto1 obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectSkillRecruiteeById", ReplyAction="http://tempuri.org/IServiceWCF/selectSkillRecruiteeByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.SkillDto1> selectSkillRecruiteeByIdAsync(recommenderSystems.ElasticService.SkillDto1 obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRanking", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRankingResponse")]
        recommenderSystems.ElasticService.RankingDto[] selectAllRanking();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllRanking", ReplyAction="http://tempuri.org/IServiceWCF/selectAllRankingResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RankingDto[]> selectAllRankingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRankingById", ReplyAction="http://tempuri.org/IServiceWCF/selectRankingByIdResponse")]
        recommenderSystems.ElasticService.RankingDto selectRankingById(recommenderSystems.ElasticService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectRankingById", ReplyAction="http://tempuri.org/IServiceWCF/selectRankingByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RankingDto> selectRankingByIdAsync(recommenderSystems.ElasticService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRanking", ReplyAction="http://tempuri.org/IServiceWCF/insertRankingResponse")]
        bool insertRanking(recommenderSystems.ElasticService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/insertRanking", ReplyAction="http://tempuri.org/IServiceWCF/insertRankingResponse")]
        System.Threading.Tasks.Task<bool> insertRankingAsync(recommenderSystems.ElasticService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRanking", ReplyAction="http://tempuri.org/IServiceWCF/updateRankingResponse")]
        bool updateRanking(recommenderSystems.ElasticService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/updateRanking", ReplyAction="http://tempuri.org/IServiceWCF/updateRankingResponse")]
        System.Threading.Tasks.Task<bool> updateRankingAsync(recommenderSystems.ElasticService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRanking", ReplyAction="http://tempuri.org/IServiceWCF/deleteRankingResponse")]
        bool deleteRanking(recommenderSystems.ElasticService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/deleteRanking", ReplyAction="http://tempuri.org/IServiceWCF/deleteRankingResponse")]
        System.Threading.Tasks.Task<bool> deleteRankingAsync(recommenderSystems.ElasticService.RankingDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createRankingDTO", ReplyAction="http://tempuri.org/IServiceWCF/createRankingDTOResponse")]
        recommenderSystems.ElasticService.RankingDto createRankingDTO(string RankingId, string RankingName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/createRankingDTO", ReplyAction="http://tempuri.org/IServiceWCF/createRankingDTOResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.RankingDto> createRankingDTOAsync(string RankingId, string RankingName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllAge", ReplyAction="http://tempuri.org/IServiceWCF/selectAllAgeResponse")]
        recommenderSystems.ElasticService.AgeDto[] selectAllAge();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllAge", ReplyAction="http://tempuri.org/IServiceWCF/selectAllAgeResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.AgeDto[]> selectAllAgeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAgeById", ReplyAction="http://tempuri.org/IServiceWCF/selectAgeByIdResponse")]
        recommenderSystems.ElasticService.AgeDto selectAgeById(recommenderSystems.ElasticService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAgeById", ReplyAction="http://tempuri.org/IServiceWCF/selectAgeByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.AgeDto> selectAgeByIdAsync(recommenderSystems.ElasticService.AgeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllEducation", ReplyAction="http://tempuri.org/IServiceWCF/selectAllEducationResponse")]
        recommenderSystems.ElasticService.EducationDto[] selectAllEducation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllEducation", ReplyAction="http://tempuri.org/IServiceWCF/selectAllEducationResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.EducationDto[]> selectAllEducationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectEducationById", ReplyAction="http://tempuri.org/IServiceWCF/selectEducationByIdResponse")]
        recommenderSystems.ElasticService.EducationDto selectEducationById(recommenderSystems.ElasticService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectEducationById", ReplyAction="http://tempuri.org/IServiceWCF/selectEducationByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.EducationDto> selectEducationByIdAsync(recommenderSystems.ElasticService.EducationDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllIncome", ReplyAction="http://tempuri.org/IServiceWCF/selectAllIncomeResponse")]
        recommenderSystems.ElasticService.IncomeDto[] selectAllIncome();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectAllIncome", ReplyAction="http://tempuri.org/IServiceWCF/selectAllIncomeResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.IncomeDto[]> selectAllIncomeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectIncomeById", ReplyAction="http://tempuri.org/IServiceWCF/selectIncomeByIdResponse")]
        recommenderSystems.ElasticService.IncomeDto selectIncomeById(recommenderSystems.ElasticService.IncomeDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/selectIncomeById", ReplyAction="http://tempuri.org/IServiceWCF/selectIncomeByIdResponse")]
        System.Threading.Tasks.Task<recommenderSystems.ElasticService.IncomeDto> selectIncomeByIdAsync(recommenderSystems.ElasticService.IncomeDto obj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceWCFChannel : recommenderSystems.ElasticService.IServiceWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceWCFClient : System.ServiceModel.ClientBase<recommenderSystems.ElasticService.IServiceWCF>, recommenderSystems.ElasticService.IServiceWCF {
        
        public ServiceWCFClient() {
        }
        
        public ServiceWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public recommenderSystems.ElasticService.TaskDto[] selectAllTask() {
            return base.Channel.selectAllTask();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.TaskDto[]> selectAllTaskAsync() {
            return base.Channel.selectAllTaskAsync();
        }
        
        public recommenderSystems.ElasticService.TaskDto selectTaskById(recommenderSystems.ElasticService.TaskDto obj) {
            return base.Channel.selectTaskById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.TaskDto> selectTaskByIdAsync(recommenderSystems.ElasticService.TaskDto obj) {
            return base.Channel.selectTaskByIdAsync(obj);
        }
        
        public bool insertTask(recommenderSystems.ElasticService.TaskDto obj) {
            return base.Channel.insertTask(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertTaskAsync(recommenderSystems.ElasticService.TaskDto obj) {
            return base.Channel.insertTaskAsync(obj);
        }
        
        public bool updateTask(recommenderSystems.ElasticService.TaskDto obj) {
            return base.Channel.updateTask(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateTaskAsync(recommenderSystems.ElasticService.TaskDto obj) {
            return base.Channel.updateTaskAsync(obj);
        }
        
        public bool deleteTask(recommenderSystems.ElasticService.TaskDto obj) {
            return base.Channel.deleteTask(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteTaskAsync(recommenderSystems.ElasticService.TaskDto obj) {
            return base.Channel.deleteTaskAsync(obj);
        }
        
        public recommenderSystems.ElasticService.TaskRatingDTO[] selectRatings() {
            return base.Channel.selectRatings();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.TaskRatingDTO[]> selectRatingsAsync() {
            return base.Channel.selectRatingsAsync();
        }
        
        public recommenderSystems.ElasticService.RecommendedJobDto[] selectAllRecommendedJob() {
            return base.Channel.selectAllRecommendedJob();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecommendedJobDto[]> selectAllRecommendedJobAsync() {
            return base.Channel.selectAllRecommendedJobAsync();
        }
        
        public recommenderSystems.ElasticService.RecommendedJobDto selectRecommendedJobByJobIdAndRecruiteeId(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.selectRecommendedJobByJobIdAndRecruiteeId(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecommendedJobDto> selectRecommendedJobByJobIdAndRecruiteeIdAsync(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.selectRecommendedJobByJobIdAndRecruiteeIdAsync(obj);
        }
        
        public recommenderSystems.ElasticService.RecommendedJobDto[] selectRecommendedJobByRecruiteeId(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.selectRecommendedJobByRecruiteeId(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecommendedJobDto[]> selectRecommendedJobByRecruiteeIdAsync(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.selectRecommendedJobByRecruiteeIdAsync(obj);
        }
        
        public bool insertRecommendedJob(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.insertRecommendedJob(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertRecommendedJobAsync(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.insertRecommendedJobAsync(obj);
        }
        
        public bool updateRecommendedJob(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.updateRecommendedJob(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateRecommendedJobAsync(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.updateRecommendedJobAsync(obj);
        }
        
        public bool deleteRecommendedJob(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.deleteRecommendedJob(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteRecommendedJobAsync(recommenderSystems.ElasticService.RecommendedJobDto obj) {
            return base.Channel.deleteRecommendedJobAsync(obj);
        }
        
        public recommenderSystems.ElasticService.RecruiteeDto[] selectAllRecruitee() {
            return base.Channel.selectAllRecruitee();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto[]> selectAllRecruiteeAsync() {
            return base.Channel.selectAllRecruiteeAsync();
        }
        
        public recommenderSystems.ElasticService.RecruiteeDto selectRecruiteeById(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.selectRecruiteeById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto> selectRecruiteeByIdAsync(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.selectRecruiteeByIdAsync(obj);
        }
        
        public recommenderSystems.ElasticService.RecruiteeDto selectRecruiteeByEmail(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.selectRecruiteeByEmail(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto> selectRecruiteeByEmailAsync(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.selectRecruiteeByEmailAsync(obj);
        }
        
        public bool insertRecruitee(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.insertRecruitee(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertRecruiteeAsync(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.insertRecruiteeAsync(obj);
        }
        
        public bool updateRecruitee(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.updateRecruitee(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateRecruiteeAsync(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.updateRecruiteeAsync(obj);
        }
        
        public bool deleteRecruitee(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.deleteRecruitee(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteRecruiteeAsync(recommenderSystems.ElasticService.RecruiteeDto obj) {
            return base.Channel.deleteRecruiteeAsync(obj);
        }
        
        public recommenderSystems.ElasticService.RecruiteeDto createRecruiteeDTO(System.Guid RecruiteeId, string RankingId, double RankingValue, string Email, string FirstName, string LastName, string Gender, string AgeId, string EducationId, string IncomeId) {
            return base.Channel.createRecruiteeDTO(RecruiteeId, RankingId, RankingValue, Email, FirstName, LastName, Gender, AgeId, EducationId, IncomeId);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto> createRecruiteeDTOAsync(System.Guid RecruiteeId, string RankingId, double RankingValue, string Email, string FirstName, string LastName, string Gender, string AgeId, string EducationId, string IncomeId) {
            return base.Channel.createRecruiteeDTOAsync(RecruiteeId, RankingId, RankingValue, Email, FirstName, LastName, Gender, AgeId, EducationId, IncomeId);
        }
        
        public recommenderSystems.ElasticService.RecruiteeDto[] selectRecruiteeBySkillId(string SkillId) {
            return base.Channel.selectRecruiteeBySkillId(SkillId);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RecruiteeDto[]> selectRecruiteeBySkillIdAsync(string SkillId) {
            return base.Channel.selectRecruiteeBySkillIdAsync(SkillId);
        }
        
        public bool addSkillToRecruitee(string RecruiteeId, string SkillId) {
            return base.Channel.addSkillToRecruitee(RecruiteeId, SkillId);
        }
        
        public System.Threading.Tasks.Task<bool> addSkillToRecruiteeAsync(string RecruiteeId, string SkillId) {
            return base.Channel.addSkillToRecruiteeAsync(RecruiteeId, SkillId);
        }
        
        public bool removeSkillFromRecruitee(string RecruiteeId, string SkillId) {
            return base.Channel.removeSkillFromRecruitee(RecruiteeId, SkillId);
        }
        
        public System.Threading.Tasks.Task<bool> removeSkillFromRecruiteeAsync(string RecruiteeId, string SkillId) {
            return base.Channel.removeSkillFromRecruiteeAsync(RecruiteeId, SkillId);
        }
        
        public recommenderSystems.ElasticService.JobDto[] selectAllJob() {
            return base.Channel.selectAllJob();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto[]> selectAllJobAsync() {
            return base.Channel.selectAllJobAsync();
        }
        
        public recommenderSystems.ElasticService.JobDto[] selectJobNotDoneByRecruiteeIdRecommendation(string recruiteeId) {
            return base.Channel.selectJobNotDoneByRecruiteeIdRecommendation(recruiteeId);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto[]> selectJobNotDoneByRecruiteeIdRecommendationAsync(string recruiteeId) {
            return base.Channel.selectJobNotDoneByRecruiteeIdRecommendationAsync(recruiteeId);
        }
        
        public recommenderSystems.ElasticService.JobDto[] selectJobNotDoneByRecruiteeId(string recruiteeId) {
            return base.Channel.selectJobNotDoneByRecruiteeId(recruiteeId);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto[]> selectJobNotDoneByRecruiteeIdAsync(string recruiteeId) {
            return base.Channel.selectJobNotDoneByRecruiteeIdAsync(recruiteeId);
        }
        
        public recommenderSystems.ElasticService.JobDto selectJobById(recommenderSystems.ElasticService.JobDto obj) {
            return base.Channel.selectJobById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto> selectJobByIdAsync(recommenderSystems.ElasticService.JobDto obj) {
            return base.Channel.selectJobByIdAsync(obj);
        }
        
        public bool insertJob(recommenderSystems.ElasticService.JobDto obj) {
            return base.Channel.insertJob(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertJobAsync(recommenderSystems.ElasticService.JobDto obj) {
            return base.Channel.insertJobAsync(obj);
        }
        
        public bool updateJob(recommenderSystems.ElasticService.JobDto obj) {
            return base.Channel.updateJob(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateJobAsync(recommenderSystems.ElasticService.JobDto obj) {
            return base.Channel.updateJobAsync(obj);
        }
        
        public bool deleteJob(recommenderSystems.ElasticService.JobDto obj) {
            return base.Channel.deleteJob(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteJobAsync(recommenderSystems.ElasticService.JobDto obj) {
            return base.Channel.deleteJobAsync(obj);
        }
        
        public recommenderSystems.ElasticService.JobDto createJobDTO(System.Guid JobId, string JobName, string CompensationId, System.Guid EmployerId, string JobDescription, int JobQuota, double JobExperienceLevel, double JobCompensationValue) {
            return base.Channel.createJobDTO(JobId, JobName, CompensationId, EmployerId, JobDescription, JobQuota, JobExperienceLevel, JobCompensationValue);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto> createJobDTOAsync(System.Guid JobId, string JobName, string CompensationId, System.Guid EmployerId, string JobDescription, int JobQuota, double JobExperienceLevel, double JobCompensationValue) {
            return base.Channel.createJobDTOAsync(JobId, JobName, CompensationId, EmployerId, JobDescription, JobQuota, JobExperienceLevel, JobCompensationValue);
        }
        
        public recommenderSystems.ElasticService.JobDto[] selectJobBySkillId(string SkillId) {
            return base.Channel.selectJobBySkillId(SkillId);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.JobDto[]> selectJobBySkillIdAsync(string SkillId) {
            return base.Channel.selectJobBySkillIdAsync(SkillId);
        }
        
        public bool addSkillToJob(string JobId, string SkillId) {
            return base.Channel.addSkillToJob(JobId, SkillId);
        }
        
        public System.Threading.Tasks.Task<bool> addSkillToJobAsync(string JobId, string SkillId) {
            return base.Channel.addSkillToJobAsync(JobId, SkillId);
        }
        
        public bool removeSkillFromJob(string JobId, string SkillId) {
            return base.Channel.removeSkillFromJob(JobId, SkillId);
        }
        
        public System.Threading.Tasks.Task<bool> removeSkillFromJobAsync(string JobId, string SkillId) {
            return base.Channel.removeSkillFromJobAsync(JobId, SkillId);
        }
        
        public recommenderSystems.ElasticService.SkillDto[] selectAllSkillJob() {
            return base.Channel.selectAllSkillJob();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.SkillDto[]> selectAllSkillJobAsync() {
            return base.Channel.selectAllSkillJobAsync();
        }
        
        public recommenderSystems.ElasticService.SkillDto selectSkillJobById(recommenderSystems.ElasticService.SkillDto obj) {
            return base.Channel.selectSkillJobById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.SkillDto> selectSkillJobByIdAsync(recommenderSystems.ElasticService.SkillDto obj) {
            return base.Channel.selectSkillJobByIdAsync(obj);
        }
        
        public recommenderSystems.ElasticService.SkillDto1[] selectAllSkillRecruitee() {
            return base.Channel.selectAllSkillRecruitee();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.SkillDto1[]> selectAllSkillRecruiteeAsync() {
            return base.Channel.selectAllSkillRecruiteeAsync();
        }
        
        public recommenderSystems.ElasticService.SkillDto1 selectSkillRecruiteeById(recommenderSystems.ElasticService.SkillDto1 obj) {
            return base.Channel.selectSkillRecruiteeById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.SkillDto1> selectSkillRecruiteeByIdAsync(recommenderSystems.ElasticService.SkillDto1 obj) {
            return base.Channel.selectSkillRecruiteeByIdAsync(obj);
        }
        
        public recommenderSystems.ElasticService.RankingDto[] selectAllRanking() {
            return base.Channel.selectAllRanking();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RankingDto[]> selectAllRankingAsync() {
            return base.Channel.selectAllRankingAsync();
        }
        
        public recommenderSystems.ElasticService.RankingDto selectRankingById(recommenderSystems.ElasticService.RankingDto obj) {
            return base.Channel.selectRankingById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RankingDto> selectRankingByIdAsync(recommenderSystems.ElasticService.RankingDto obj) {
            return base.Channel.selectRankingByIdAsync(obj);
        }
        
        public bool insertRanking(recommenderSystems.ElasticService.RankingDto obj) {
            return base.Channel.insertRanking(obj);
        }
        
        public System.Threading.Tasks.Task<bool> insertRankingAsync(recommenderSystems.ElasticService.RankingDto obj) {
            return base.Channel.insertRankingAsync(obj);
        }
        
        public bool updateRanking(recommenderSystems.ElasticService.RankingDto obj) {
            return base.Channel.updateRanking(obj);
        }
        
        public System.Threading.Tasks.Task<bool> updateRankingAsync(recommenderSystems.ElasticService.RankingDto obj) {
            return base.Channel.updateRankingAsync(obj);
        }
        
        public bool deleteRanking(recommenderSystems.ElasticService.RankingDto obj) {
            return base.Channel.deleteRanking(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteRankingAsync(recommenderSystems.ElasticService.RankingDto obj) {
            return base.Channel.deleteRankingAsync(obj);
        }
        
        public recommenderSystems.ElasticService.RankingDto createRankingDTO(string RankingId, string RankingName) {
            return base.Channel.createRankingDTO(RankingId, RankingName);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.RankingDto> createRankingDTOAsync(string RankingId, string RankingName) {
            return base.Channel.createRankingDTOAsync(RankingId, RankingName);
        }
        
        public recommenderSystems.ElasticService.AgeDto[] selectAllAge() {
            return base.Channel.selectAllAge();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.AgeDto[]> selectAllAgeAsync() {
            return base.Channel.selectAllAgeAsync();
        }
        
        public recommenderSystems.ElasticService.AgeDto selectAgeById(recommenderSystems.ElasticService.AgeDto obj) {
            return base.Channel.selectAgeById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.AgeDto> selectAgeByIdAsync(recommenderSystems.ElasticService.AgeDto obj) {
            return base.Channel.selectAgeByIdAsync(obj);
        }
        
        public recommenderSystems.ElasticService.EducationDto[] selectAllEducation() {
            return base.Channel.selectAllEducation();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.EducationDto[]> selectAllEducationAsync() {
            return base.Channel.selectAllEducationAsync();
        }
        
        public recommenderSystems.ElasticService.EducationDto selectEducationById(recommenderSystems.ElasticService.EducationDto obj) {
            return base.Channel.selectEducationById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.EducationDto> selectEducationByIdAsync(recommenderSystems.ElasticService.EducationDto obj) {
            return base.Channel.selectEducationByIdAsync(obj);
        }
        
        public recommenderSystems.ElasticService.IncomeDto[] selectAllIncome() {
            return base.Channel.selectAllIncome();
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.IncomeDto[]> selectAllIncomeAsync() {
            return base.Channel.selectAllIncomeAsync();
        }
        
        public recommenderSystems.ElasticService.IncomeDto selectIncomeById(recommenderSystems.ElasticService.IncomeDto obj) {
            return base.Channel.selectIncomeById(obj);
        }
        
        public System.Threading.Tasks.Task<recommenderSystems.ElasticService.IncomeDto> selectIncomeByIdAsync(recommenderSystems.ElasticService.IncomeDto obj) {
            return base.Channel.selectIncomeByIdAsync(obj);
        }
    }
}
